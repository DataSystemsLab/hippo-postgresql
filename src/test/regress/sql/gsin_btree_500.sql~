
set enable_seqscan = off;

\timing on

drop table customer CASCADE;
BEGIN;

	CREATE TABLE PART (

		P_PARTKEY		SERIAL,
		P_NAME			VARCHAR(55),
		P_MFGR			CHAR(25),
		P_BRAND			CHAR(10),
		P_TYPE			VARCHAR(25),
		P_SIZE			INTEGER,
		P_CONTAINER		CHAR(10),
		P_RETAILPRICE	DECIMAL,
		P_COMMENT		VARCHAR(23)
	);

	COPY part FROM '/mnt/mongodb/jy_postgres/tpch/tpch_2_17_0/dbgen/data/500/part.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;

BEGIN;

	CREATE TABLE REGION (
		R_REGIONKEY	SERIAL,
		R_NAME		CHAR(25),
		R_COMMENT	VARCHAR(152)
	);

	COPY region FROM '/mnt/mongodb/jy_postgres/tpch/tpch_2_17_0/dbgen/data/500/region.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;

BEGIN;

	CREATE TABLE NATION (
		N_NATIONKEY		SERIAL,
		N_NAME			CHAR(25),
		N_REGIONKEY		BIGINT NOT NULL,  -- references R_REGIONKEY
		N_COMMENT		VARCHAR(152)
	);

	COPY nation FROM '/mnt/mongodb/jy_postgres/tpch/tpch_2_17_0/dbgen/data/500/nation.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;

BEGIN;

	CREATE TABLE SUPPLIER (
		S_SUPPKEY		SERIAL,
		S_NAME			CHAR(25),
		S_ADDRESS		VARCHAR(40),
		S_NATIONKEY		BIGINT NOT NULL, -- references N_NATIONKEY
		S_PHONE			CHAR(15),
		S_ACCTBAL		DECIMAL,
		S_COMMENT		VARCHAR(101)
	);

	COPY supplier FROM '/mnt/mongodb/jy_postgres/tpch/tpch_2_17_0/dbgen/data/500/supplier.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;

BEGIN;

	CREATE TABLE CUSTOMER (
		C_CUSTKEY		SERIAL,
		C_NAME			VARCHAR(25),
		C_ADDRESS		VARCHAR(40),
		C_NATIONKEY		BIGINT NOT NULL, -- references N_NATIONKEY
		C_PHONE			CHAR(15),
		C_ACCTBAL		DECIMAL,
		C_MKTSEGMENT	CHAR(10),
		C_COMMENT		VARCHAR(117)
	);

	COPY customer FROM '/mnt/mongodb/jy_postgres/tpch/tpch_2_17_0/dbgen/data/500/customer.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;

BEGIN;

	CREATE TABLE PARTSUPP (
		PS_PARTKEY		int8 NOT NULL, -- references P_PARTKEY
		PS_SUPPKEY		int8 NOT NULL, -- references S_SUPPKEY
		PS_AVAILQTY		INTEGER,
		PS_SUPPLYCOST	DECIMAL,
		PS_COMMENT		VARCHAR(199)
	);

	COPY partsupp FROM '/mnt/mongodb/jy_postgres/tpch/tpch_2_17_0/dbgen/data/500/partsupp.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;

BEGIN;

	CREATE TABLE ORDERS (
		O_ORDERKEY		SERIAL,
		O_CUSTKEY		int8 NOT NULL, -- references C_CUSTKEY
		O_ORDERSTATUS	CHAR(1),
		O_TOTALPRICE	DECIMAL,
		O_ORDERDATE		DATE,
		O_ORDERPRIORITY	CHAR(15),
		O_CLERK			CHAR(15),
		O_SHIPPRIORITY	INTEGER,
		O_COMMENT		VARCHAR(79)
	);

	COPY orders FROM '/mnt/mongodb/jy_postgres/tpch/tpch_2_17_0/dbgen/data/500/orders.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;

BEGIN;

	CREATE TABLE LINEITEM (
		L_ORDERKEY		int8 NOT NULL, -- references O_ORDERKEY
		L_PARTKEY		int8 NOT NULL, -- references P_PARTKEY (compound fk to PARTSUPP)
		L_SUPPKEY		int8 NOT NULL, -- references S_SUPPKEY (compound fk to PARTSUPP)
		L_LINENUMBER	INTEGER,
		L_QUANTITY		DECIMAL,
		L_EXTENDEDPRICE	DECIMAL,
		L_DISCOUNT		DECIMAL,
		L_TAX			DECIMAL,
		L_RETURNFLAG	CHAR(1),
		L_LINESTATUS	CHAR(1),
		L_SHIPDATE		DATE,
		L_COMMITDATE	DATE,
		L_RECEIPTDATE	DATE,
		L_SHIPINSTRUCT	CHAR(25),
		L_SHIPMODE		CHAR(10),
		L_COMMENT		VARCHAR(44)
	);

	COPY lineitem FROM '/mnt/mongodb/jy_postgres/tpch/tpch_2_17_0/dbgen/data/500/lineitem.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;








-- indexes on the foreign keys

--\timing on


Alter table PARTSUPP alter column PS_PARTKEY set statistics 10000;

Alter table PARTSUPP alter column PS_SUPPKEY set statistics 10000;

Alter table ORDERS alter column O_CUSTKEY set statistics 10000;

Alter table LINEITEM alter column L_ORDERKEY set statistics 10000;

Alter table LINEITEM alter column L_PARTKEY set statistics 10000;

Alter table LINEITEM alter column L_SUPPKEY set statistics 10000;


Analyze PARTSUPP;
Analyze ORDERS;
Analyze LINEITEM; 


CREATE INDEX IDX_CUSTOMER_NATIONKEY ON CUSTOMER(C_NATIONKEY);

CREATE INDEX IDX_SUPPLIER_NATION_KEY ON SUPPLIER(S_NATIONKEY);


CREATE INDEX IDX_PARTSUPP_PARTKEY ON PARTSUPP using btree(PS_PARTKEY);-- with (pages_per_range=128);

CREATE INDEX IDX_PARTSUPP_SUPPKEY ON PARTSUPP using btree(PS_SUPPKEY);-- with (pages_per_range=128);

CREATE INDEX IDX_ORDERS_CUSTKEY ON ORDERS using btree(O_CUSTKEY);-- with (pages_per_range=128);

CREATE INDEX IDX_LINEITEM_ORDERKEY ON LINEITEM  using btree(L_ORDERKEY);-- with (pages_per_range=128);

CREATE INDEX IDX_LINEITEM_PART ON LINEITEM using btree(L_PARTKEY);-- with (pages_per_range=128);




-- aditional indexes

CREATE INDEX IDX_LINEITEM_SHIPDATE ON LINEITEM (L_SHIPDATE, L_DISCOUNT, L_QUANTITY);

CREATE INDEX IDX_ORDERS_ORDERDATE ON ORDERS (O_ORDERDATE);

--\di+;





-------------query 3--------------------

-- using 1448561682 as a seed to the RNG


explain select
	l_orderkey,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	o_orderdate,
	o_shippriority
from
	customer,
	orders,
	lineitem
where
	c_mktsegment = 'FURNITURE'
	and c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate < date '1995-03-17'
	and l_shipdate > date '1995-03-17'
group by
	l_orderkey,
	o_orderdate,
	o_shippriority
order by
	revenue desc,
	o_orderdate
LIMIT 10;-- using 1448561682 as a seed to the RNG


select
	l_orderkey,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	o_orderdate,
	o_shippriority
from
	customer,
	orders,
	lineitem
where
	c_mktsegment = 'FURNITURE'
	and c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate < date '1995-03-17'
	and l_shipdate > date '1995-03-17'
group by
	l_orderkey,
	o_orderdate,
	o_shippriority
order by
	revenue desc,
	o_orderdate
LIMIT 10;


-------------query 5--------------------


-- using 1448561682 as a seed to the RNG


explain select
	n_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue
from
	customer,
	orders,
	lineitem,
	supplier,
	nation,
	region
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_suppkey = s_suppkey
	and c_nationkey = s_nationkey
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = 'AMERICA'
	and o_orderdate >= date '1994-01-01'
	and o_orderdate < date '1994-01-01' + interval '1' year
group by
	n_name
order by
	revenue desc
LIMIT 1;
-- using 1448561682 as a seed to the RNG


select
	n_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue
from
	customer,
	orders,
	lineitem,
	supplier,
	nation,
	region
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_suppkey = s_suppkey
	and c_nationkey = s_nationkey
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = 'AMERICA'
	and o_orderdate >= date '1994-01-01'
	and o_orderdate < date '1994-01-01' + interval '1' year
group by
	n_name
order by
	revenue desc
LIMIT 1;
--------------query 14--------------
-- using 1448561682 as a seed to the RNG


-- using 1448561682 as a seed to the RNG


explain select
	100.00 * sum(case
		when p_type like 'PROMO%'
			then l_extendedprice * (1 - l_discount)
		else 0
	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
	lineitem,
	part
where
	l_partkey = p_partkey
	and l_shipdate >= date '1997-11-01'
	and l_shipdate < date '1997-11-01' + interval '1' month
LIMIT 1;-- using 1448561682 as a seed to the RNG


select
	100.00 * sum(case
		when p_type like 'PROMO%'
			then l_extendedprice * (1 - l_discount)
		else 0
	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
	lineitem,
	part
where
	l_partkey = p_partkey
	and l_shipdate >= date '1997-11-01'
	and l_shipdate < date '1997-11-01' + interval '1' month
LIMIT 1;

-------------query 22--------------------
explain select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substring(c_phone from 1 for 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substring(c_phone from 1 for 2) in
				('20', '30', '15', '10', '31', '33', '17')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substring(c_phone from 1 for 2) in
						('20', '30', '15', '10', '31', '33', '17')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as custsale
group by
	cntrycode
order by
	cntrycode
LIMIT 1;-- using 1448561682 as a seed to the RNG


select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substring(c_phone from 1 for 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substring(c_phone from 1 for 2) in
				('20', '30', '15', '10', '31', '33', '17')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substring(c_phone from 1 for 2) in
						('20', '30', '15', '10', '31', '33', '17')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as custsale
group by
	cntrycode
order by
	cntrycode
LIMIT 1;




DROP INDEX IDX_PARTSUPP_PARTKEY;-- ON PARTSUPP using btree(PS_PARTKEY);-- with (pages_per_range=128);

DROP INDEX IDX_PARTSUPP_SUPPKEY;-- ON PARTSUPP using btree(PS_SUPPKEY);-- with (pages_per_range=128);

DROP INDEX IDX_ORDERS_CUSTKEY;-- ON ORDERS using btree(O_CUSTKEY);-- with (pages_per_range=128);

DROP INDEX IDX_LINEITEM_ORDERKEY;-- ON LINEITEM  using btree(L_ORDERKEY);-- with (pages_per_range=128);

DROP INDEX IDX_LINEITEM_PART;-- ON LINEITEM using btree(L_PARTKEY);-- with (pages_per_range=128);

DROP INDEX IDX_LINEITEM_SUPP;-- ON LINEITEM using btree(L_SUPPKEY);-- with (pages_per_range=128);

------------------------------gsin--------------------------------------------------

CREATE INDEX IDX_PARTSUPP_PARTKEY ON PARTSUPP using gsin(PS_PARTKEY) with (max_pages_per_range=20);

CREATE INDEX IDX_PARTSUPP_SUPPKEY ON PARTSUPP using gsin(PS_SUPPKEY) with (max_pages_per_range=20);

CREATE INDEX IDX_ORDERS_CUSTKEY ON ORDERS using gsin(O_CUSTKEY) with (max_pages_per_range=20);

CREATE INDEX IDX_LINEITEM_ORDERKEY ON LINEITEM  using gsin(L_ORDERKEY) with (max_pages_per_range=20);

CREATE INDEX IDX_LINEITEM_PART ON LINEITEM using gsin(L_PARTKEY) with (max_pages_per_range=20);

CREATE INDEX IDX_LINEITEM_SUPP ON LINEITEM using gsin(L_SUPPKEY) with (max_pages_per_range=20);


-------------query 3--------------------

-- using 1448561682 as a seed to the RNG


explain select
	l_orderkey,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	o_orderdate,
	o_shippriority
from
	customer,
	orders,
	lineitem
where
	c_mktsegment = 'FURNITURE'
	and c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate < date '1995-03-17'
	and l_shipdate > date '1995-03-17'
group by
	l_orderkey,
	o_orderdate,
	o_shippriority
order by
	revenue desc,
	o_orderdate
LIMIT 10;-- using 1448561682 as a seed to the RNG


select
	l_orderkey,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	o_orderdate,
	o_shippriority
from
	customer,
	orders,
	lineitem
where
	c_mktsegment = 'FURNITURE'
	and c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate < date '1995-03-17'
	and l_shipdate > date '1995-03-17'
group by
	l_orderkey,
	o_orderdate,
	o_shippriority
order by
	revenue desc,
	o_orderdate
LIMIT 10;


-------------query 5--------------------


-- using 1448561682 as a seed to the RNG


explain select
	n_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue
from
	customer,
	orders,
	lineitem,
	supplier,
	nation,
	region
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_suppkey = s_suppkey
	and c_nationkey = s_nationkey
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = 'AMERICA'
	and o_orderdate >= date '1994-01-01'
	and o_orderdate < date '1994-01-01' + interval '1' year
group by
	n_name
order by
	revenue desc
LIMIT 1;
-- using 1448561682 as a seed to the RNG


select
	n_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue
from
	customer,
	orders,
	lineitem,
	supplier,
	nation,
	region
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_suppkey = s_suppkey
	and c_nationkey = s_nationkey
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = 'AMERICA'
	and o_orderdate >= date '1994-01-01'
	and o_orderdate < date '1994-01-01' + interval '1' year
group by
	n_name
order by
	revenue desc
LIMIT 1;
--------------query 14--------------
-- using 1448561682 as a seed to the RNG


-- using 1448561682 as a seed to the RNG


explain select
	100.00 * sum(case
		when p_type like 'PROMO%'
			then l_extendedprice * (1 - l_discount)
		else 0
	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
	lineitem,
	part
where
	l_partkey = p_partkey
	and l_shipdate >= date '1997-11-01'
	and l_shipdate < date '1997-11-01' + interval '1' month
LIMIT 1;-- using 1448561682 as a seed to the RNG


select
	100.00 * sum(case
		when p_type like 'PROMO%'
			then l_extendedprice * (1 - l_discount)
		else 0
	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
	lineitem,
	part
where
	l_partkey = p_partkey
	and l_shipdate >= date '1997-11-01'
	and l_shipdate < date '1997-11-01' + interval '1' month
LIMIT 1;
-------------query 22--------------------
explain select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substring(c_phone from 1 for 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substring(c_phone from 1 for 2) in
				('20', '30', '15', '10', '31', '33', '17')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substring(c_phone from 1 for 2) in
						('20', '30', '15', '10', '31', '33', '17')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as custsale
group by
	cntrycode
order by
	cntrycode
LIMIT 1;-- using 1448561682 as a seed to the RNG


select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substring(c_phone from 1 for 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substring(c_phone from 1 for 2) in
				('20', '30', '15', '10', '31', '33', '17')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substring(c_phone from 1 for 2) in
						('20', '30', '15', '10', '31', '33', '17')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as custsale
group by
	cntrycode
order by
	cntrycode
LIMIT 1;


DROP INDEX IDX_PARTSUPP_PARTKEY;-- ON PARTSUPP using btree(PS_PARTKEY);-- with (pages_per_range=128);

DROP INDEX IDX_PARTSUPP_SUPPKEY;-- ON PARTSUPP using btree(PS_SUPPKEY);-- with (pages_per_range=128);

DROP INDEX IDX_ORDERS_CUSTKEY;-- ON ORDERS using btree(O_CUSTKEY);-- with (pages_per_range=128);

DROP INDEX IDX_LINEITEM_ORDERKEY;-- ON LINEITEM  using btree(L_ORDERKEY);-- with (pages_per_range=128);

DROP INDEX IDX_LINEITEM_PART;-- ON LINEITEM using btree(L_PARTKEY);-- with (pages_per_range=128);

DROP INDEX IDX_LINEITEM_SUPP;-- ON LINEITEM using btree(L_SUPPKEY);-- with (pages_per_range=128);

------------------------------brin--------------------------------------------------
CREATE INDEX IDX_PARTSUPP_PARTKEY ON PARTSUPP using brin(PS_PARTKEY) with (pages_per_range=128);

CREATE INDEX IDX_PARTSUPP_SUPPKEY ON PARTSUPP using brin(PS_SUPPKEY) with (pages_per_range=128);

CREATE INDEX IDX_ORDERS_CUSTKEY ON ORDERS using brin(O_CUSTKEY) with (pages_per_range=128);

CREATE INDEX IDX_LINEITEM_ORDERKEY ON LINEITEM  using brin(L_ORDERKEY) with (pages_per_range=128);

CREATE INDEX IDX_LINEITEM_PART ON LINEITEM using brin(L_PARTKEY) with (pages_per_range=128);

CREATE INDEX IDX_LINEITEM_SUPP ON LINEITEM using brin(L_SUPPKEY) with (pages_per_range=128);


-------------query 3--------------------

-- using 1448561682 as a seed to the RNG


explain select
	l_orderkey,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	o_orderdate,
	o_shippriority
from
	customer,
	orders,
	lineitem
where
	c_mktsegment = 'FURNITURE'
	and c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate < date '1995-03-17'
	and l_shipdate > date '1995-03-17'
group by
	l_orderkey,
	o_orderdate,
	o_shippriority
order by
	revenue desc,
	o_orderdate
LIMIT 10;-- using 1448561682 as a seed to the RNG


select
	l_orderkey,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	o_orderdate,
	o_shippriority
from
	customer,
	orders,
	lineitem
where
	c_mktsegment = 'FURNITURE'
	and c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate < date '1995-03-17'
	and l_shipdate > date '1995-03-17'
group by
	l_orderkey,
	o_orderdate,
	o_shippriority
order by
	revenue desc,
	o_orderdate
LIMIT 10;


-------------query 5--------------------


-- using 1448561682 as a seed to the RNG


explain select
	n_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue
from
	customer,
	orders,
	lineitem,
	supplier,
	nation,
	region
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_suppkey = s_suppkey
	and c_nationkey = s_nationkey
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = 'AMERICA'
	and o_orderdate >= date '1994-01-01'
	and o_orderdate < date '1994-01-01' + interval '1' year
group by
	n_name
order by
	revenue desc
LIMIT 1;
-- using 1448561682 as a seed to the RNG


select
	n_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue
from
	customer,
	orders,
	lineitem,
	supplier,
	nation,
	region
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_suppkey = s_suppkey
	and c_nationkey = s_nationkey
	and s_nationkey = n_nationkey
	and n_regionkey = r_regionkey
	and r_name = 'AMERICA'
	and o_orderdate >= date '1994-01-01'
	and o_orderdate < date '1994-01-01' + interval '1' year
group by
	n_name
order by
	revenue desc
LIMIT 1;
--------------query 14--------------
-- using 1448561682 as a seed to the RNG


-- using 1448561682 as a seed to the RNG


explain select
	100.00 * sum(case
		when p_type like 'PROMO%'
			then l_extendedprice * (1 - l_discount)
		else 0
	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
	lineitem,
	part
where
	l_partkey = p_partkey
	and l_shipdate >= date '1997-11-01'
	and l_shipdate < date '1997-11-01' + interval '1' month
LIMIT 1;-- using 1448561682 as a seed to the RNG


select
	100.00 * sum(case
		when p_type like 'PROMO%'
			then l_extendedprice * (1 - l_discount)
		else 0
	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
	lineitem,
	part
where
	l_partkey = p_partkey
	and l_shipdate >= date '1997-11-01'
	and l_shipdate < date '1997-11-01' + interval '1' month
LIMIT 1;
-------------query 22--------------------
explain select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substring(c_phone from 1 for 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substring(c_phone from 1 for 2) in
				('20', '30', '15', '10', '31', '33', '17')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substring(c_phone from 1 for 2) in
						('20', '30', '15', '10', '31', '33', '17')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as custsale
group by
	cntrycode
order by
	cntrycode
LIMIT 1;-- using 1448561682 as a seed to the RNG


select
	cntrycode,
	count(*) as numcust,
	sum(c_acctbal) as totacctbal
from
	(
		select
			substring(c_phone from 1 for 2) as cntrycode,
			c_acctbal
		from
			customer
		where
			substring(c_phone from 1 for 2) in
				('20', '30', '15', '10', '31', '33', '17')
			and c_acctbal > (
				select
					avg(c_acctbal)
				from
					customer
				where
					c_acctbal > 0.00
					and substring(c_phone from 1 for 2) in
						('20', '30', '15', '10', '31', '33', '17')
			)
			and not exists (
				select
					*
				from
					orders
				where
					o_custkey = c_custkey
			)
	) as custsale
group by
	cntrycode
order by
	cntrycode
LIMIT 1;


