set enable_seqscan = off;

\timing on

drop table customer CASCADE;
BEGIN;

	CREATE TABLE PART (

		P_PARTKEY		SERIAL,
		P_NAME			VARCHAR(55),
		P_MFGR			CHAR(25),
		P_BRAND			CHAR(10),
		P_TYPE			VARCHAR(25),
		P_SIZE			INTEGER,
		P_CONTAINER		CHAR(10),
		P_RETAILPRICE	DECIMAL,
		P_COMMENT		VARCHAR(23)
	);

	COPY part FROM '/home/sparkadmin/TPCH_Tools/tpch_2_17_0/dbgen/data/test/part.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;

BEGIN;

	CREATE TABLE REGION (
		R_REGIONKEY	SERIAL,
		R_NAME		CHAR(25),
		R_COMMENT	VARCHAR(152)
	);

	COPY region FROM '/home/sparkadmin/TPCH_Tools/tpch_2_17_0/dbgen/data/test/region.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;

BEGIN;

	CREATE TABLE NATION (
		N_NATIONKEY		SERIAL,
		N_NAME			CHAR(25),
		N_REGIONKEY		BIGINT NOT NULL,  -- references R_REGIONKEY
		N_COMMENT		VARCHAR(152)
	);

	COPY nation FROM '/home/sparkadmin/TPCH_Tools/tpch_2_17_0/dbgen/data/test/nation.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;

BEGIN;

	CREATE TABLE SUPPLIER (
		S_SUPPKEY		SERIAL,
		S_NAME			CHAR(25),
		S_ADDRESS		VARCHAR(40),
		S_NATIONKEY		BIGINT NOT NULL, -- references N_NATIONKEY
		S_PHONE			CHAR(15),
		S_ACCTBAL		DECIMAL,
		S_COMMENT		VARCHAR(101)
	);

	COPY supplier FROM '/home/sparkadmin/TPCH_Tools/tpch_2_17_0/dbgen/data/test/supplier.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;

BEGIN;

	CREATE TABLE CUSTOMER (
		C_CUSTKEY		SERIAL,
		C_NAME			VARCHAR(25),
		C_ADDRESS		VARCHAR(40),
		C_NATIONKEY		BIGINT NOT NULL, -- references N_NATIONKEY
		C_PHONE			CHAR(15),
		C_ACCTBAL		DECIMAL,
		C_MKTSEGMENT	CHAR(10),
		C_COMMENT		VARCHAR(117)
	);

	COPY customer FROM '/home/sparkadmin/TPCH_Tools/tpch_2_17_0/dbgen/data/test/customer.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;

BEGIN;

	CREATE TABLE PARTSUPP (
		PS_PARTKEY		int8 NOT NULL, -- references P_PARTKEY
		PS_SUPPKEY		int8 NOT NULL, -- references S_SUPPKEY
		PS_AVAILQTY		INTEGER,
		PS_SUPPLYCOST	DECIMAL,
		PS_COMMENT		VARCHAR(199)
	);

	COPY partsupp FROM '/home/sparkadmin/TPCH_Tools/tpch_2_17_0/dbgen/data/test/partsupp.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;

BEGIN;

	CREATE TABLE ORDERS (
		O_ORDERKEY		SERIAL,
		O_CUSTKEY		int8 NOT NULL, -- references C_CUSTKEY
		O_ORDERSTATUS	CHAR(1),
		O_TOTALPRICE	DECIMAL,
		O_ORDERDATE		int8,
		O_ORDERPRIORITY	CHAR(15),
		O_CLERK			CHAR(15),
		O_SHIPPRIORITY	INTEGER,
		O_COMMENT		VARCHAR(79)
	);

	COPY orders FROM '/home/sparkadmin/TPCH_Tools/tpch_2_17_0/dbgen/data/test/orders.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;

BEGIN;

	CREATE TABLE LINEITEM (
		L_ORDERKEY		int8 NOT NULL, -- references O_ORDERKEY
		L_PARTKEY		int8 NOT NULL, -- references P_PARTKEY (compound fk to PARTSUPP)
		L_SUPPKEY		int8 NOT NULL, -- references S_SUPPKEY (compound fk to PARTSUPP)
		L_LINENUMBER	INTEGER,
		L_QUANTITY		DECIMAL,
		L_EXTENDEDPRICE	DECIMAL,
		L_DISCOUNT		DECIMAL,
		L_TAX			DECIMAL,
		L_RETURNFLAG	CHAR(1),
		L_LINESTATUS	CHAR(1),
		L_SHIPDATE		int8,
		L_COMMITDATE	DATE,
		L_RECEIPTDATE	DATE,
		L_SHIPINSTRUCT	CHAR(25),
		L_SHIPMODE		CHAR(10),
		L_COMMENT		VARCHAR(44)
	);

	COPY lineitem FROM '/home/sparkadmin/TPCH_Tools/tpch_2_17_0/dbgen/data/test/lineitem.csv' WITH (FORMAT csv, DELIMITER '|');

COMMIT;

Alter table LINEITEM alter column L_SHIPDATE set statistics 255;
Alter table ORDERS alter column O_ORDERDATE set statistics 255;

Analyze ORDERS;
Analyze LINEITEM; 

CREATE INDEX IDX_SUPPLIER_NATION_KEY ON SUPPLIER (S_NATIONKEY);

CREATE INDEX IDX_PARTSUPP_PARTKEY ON PARTSUPP (PS_PARTKEY);
CREATE INDEX IDX_PARTSUPP_SUPPKEY ON PARTSUPP (PS_SUPPKEY);

CREATE INDEX IDX_CUSTOMER_NATIONKEY ON CUSTOMER (C_NATIONKEY);

CREATE INDEX IDX_ORDERS_CUSTKEY ON ORDERS (O_CUSTKEY);

CREATE INDEX IDX_LINEITEM_ORDERKEY ON LINEITEM (L_ORDERKEY);
CREATE INDEX IDX_LINEITEM_PART_SUPP ON LINEITEM (L_PARTKEY,L_SUPPKEY);

CREATE INDEX IDX_NATION_REGIONKEY ON NATION (N_REGIONKEY);


-----------btree0----------

CREATE INDEX Test_IDX_LINEITEM_SHIPDATE ON LINEITEM using btree(L_SHIPDATE);

CREATE INDEX Test_IDX_ORDERS_ORDERDATE ON ORDERS using btree(O_ORDERDATE);

\di+

-------------query 10------------------
-- using 1448561682 as a seed to the RNG


explain analyze select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	o_orderdate >= 19931201
	and o_orderdate < 19931210	
	and c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_returnflag = 'R'
--	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;-- using 1448561682 as a seed to the RNG

-------------query 14------------------

explain analyze select
	100.00 * sum(case
		when p_type like 'PROMO%'
			then l_extendedprice * (1 - l_discount)
		else 0
	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
	lineitem,
	part
where
	l_shipdate >= 19971101
	and l_shipdate < 19971110	
	and l_partkey = p_partkey

LIMIT 1;-- using 1448561682 as a seed to the RNG

-------------query 15------------------


create view revenue0 (supplier_no, total_revenue) as
	select
		l_suppkey,
		sum(l_extendedprice * (1 - l_discount))
	from
		lineitem
	where
		l_shipdate >= 19930101
		and l_shipdate < 19930110
	group by
		l_suppkey;


explain analyze select
	s_suppkey,
	s_name,
	s_address,
	s_phone,
	total_revenue
from
	supplier,
	revenue0
where
	s_suppkey = supplier_no
	and total_revenue = (
		select
			max(total_revenue)
		from
			revenue0
	)
order by
	s_suppkey
LIMIT 1;

drop view revenue0;

-------------query 10------------------
-- using 1448561682 as a seed to the RNG


explain analyze select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	o_orderdate >= 19931201
	and o_orderdate < 19931210	
	and c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_returnflag = 'R'
--	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;-- using 1448561682 as a seed to the RNG

-------------query 14------------------

explain analyze select
	100.00 * sum(case
		when p_type like 'PROMO%'
			then l_extendedprice * (1 - l_discount)
		else 0
	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
	lineitem,
	part
where
	l_shipdate >= 19971101
	and l_shipdate < 19971110	
	and l_partkey = p_partkey

LIMIT 1;-- using 1448561682 as a seed to the RNG

-------------query 15------------------


create view revenue0 (supplier_no, total_revenue) as
	select
		l_suppkey,
		sum(l_extendedprice * (1 - l_discount))
	from
		lineitem
	where
		l_shipdate >= 19930101
		and l_shipdate < 19930110
	group by
		l_suppkey;


explain analyze select
	s_suppkey,
	s_name,
	s_address,
	s_phone,
	total_revenue
from
	supplier,
	revenue0
where
	s_suppkey = supplier_no
	and total_revenue = (
		select
			max(total_revenue)
		from
			revenue0
	)
order by
	s_suppkey
LIMIT 1;

drop view revenue0;
-------------query 10------------------
-- using 1448561682 as a seed to the RNG


explain analyze select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	o_orderdate >= 19931201
	and o_orderdate < 19931210	
	and c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_returnflag = 'R'
--	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;-- using 1448561682 as a seed to the RNG

-------------query 14------------------

explain analyze select
	100.00 * sum(case
		when p_type like 'PROMO%'
			then l_extendedprice * (1 - l_discount)
		else 0
	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
	lineitem,
	part
where
	l_shipdate >= 19971101
	and l_shipdate < 19971110	
	and l_partkey = p_partkey

LIMIT 1;-- using 1448561682 as a seed to the RNG

-------------query 15------------------


create view revenue0 (supplier_no, total_revenue) as
	select
		l_suppkey,
		sum(l_extendedprice * (1 - l_discount))
	from
		lineitem
	where
		l_shipdate >= 19930101
		and l_shipdate < 19930110
	group by
		l_suppkey;


explain analyze select
	s_suppkey,
	s_name,
	s_address,
	s_phone,
	total_revenue
from
	supplier,
	revenue0
where
	s_suppkey = supplier_no
	and total_revenue = (
		select
			max(total_revenue)
		from
			revenue0
	)
order by
	s_suppkey
LIMIT 1;

drop view revenue0;


-----------gsin----------

DROP INDEX Test_IDX_LINEITEM_SHIPDATE;

DROP INDEX Test_IDX_ORDERS_ORDERDATE;

CREATE INDEX Test_IDX_LINEITEM_SHIPDATE ON LINEITEM using gsin(L_SHIPDATE) with (max_pages_per_range=20);

CREATE INDEX Test_IDX_ORDERS_ORDERDATE ON ORDERS using gsin(O_ORDERDATE) with (max_pages_per_range=20);

\di+

-------------query 10------------------
-- using 1448561682 as a seed to the RNG


explain analyze select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	o_orderdate >= 19931201
	and o_orderdate < 19931210	
	and c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_returnflag = 'R'
--	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;-- using 1448561682 as a seed to the RNG

-------------query 14------------------

explain analyze select
	100.00 * sum(case
		when p_type like 'PROMO%'
			then l_extendedprice * (1 - l_discount)
		else 0
	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
	lineitem,
	part
where
	l_shipdate >= 19971101
	and l_shipdate < 19971110	
	and l_partkey = p_partkey

LIMIT 1;-- using 1448561682 as a seed to the RNG

-------------query 15------------------


create view revenue0 (supplier_no, total_revenue) as
	select
		l_suppkey,
		sum(l_extendedprice * (1 - l_discount))
	from
		lineitem
	where
		l_shipdate >= 19930101
		and l_shipdate < 19930110
	group by
		l_suppkey;


explain analyze select
	s_suppkey,
	s_name,
	s_address,
	s_phone,
	total_revenue
from
	supplier,
	revenue0
where
	s_suppkey = supplier_no
	and total_revenue = (
		select
			max(total_revenue)
		from
			revenue0
	)
order by
	s_suppkey
LIMIT 1;

drop view revenue0;

-------------query 10------------------
-- using 1448561682 as a seed to the RNG


explain analyze select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	o_orderdate >= 19931201
	and o_orderdate < 19931210	
	and c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_returnflag = 'R'
--	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;-- using 1448561682 as a seed to the RNG

-------------query 14------------------

explain analyze select
	100.00 * sum(case
		when p_type like 'PROMO%'
			then l_extendedprice * (1 - l_discount)
		else 0
	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
	lineitem,
	part
where
	l_shipdate >= 19971101
	and l_shipdate < 19971110	
	and l_partkey = p_partkey

LIMIT 1;-- using 1448561682 as a seed to the RNG

-------------query 15------------------


create view revenue0 (supplier_no, total_revenue) as
	select
		l_suppkey,
		sum(l_extendedprice * (1 - l_discount))
	from
		lineitem
	where
		l_shipdate >= 19930101
		and l_shipdate < 19930110
	group by
		l_suppkey;


explain analyze select
	s_suppkey,
	s_name,
	s_address,
	s_phone,
	total_revenue
from
	supplier,
	revenue0
where
	s_suppkey = supplier_no
	and total_revenue = (
		select
			max(total_revenue)
		from
			revenue0
	)
order by
	s_suppkey
LIMIT 1;

drop view revenue0;

-------------query 10------------------
-- using 1448561682 as a seed to the RNG


explain analyze select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	o_orderdate >= 19931201
	and o_orderdate < 19931210	
	and c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_returnflag = 'R'
--	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;-- using 1448561682 as a seed to the RNG

-------------query 14------------------

explain analyze select
	100.00 * sum(case
		when p_type like 'PROMO%'
			then l_extendedprice * (1 - l_discount)
		else 0
	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
	lineitem,
	part
where
	l_shipdate >= 19971101
	and l_shipdate < 19971110	
	and l_partkey = p_partkey

LIMIT 1;-- using 1448561682 as a seed to the RNG

-------------query 15------------------


create view revenue0 (supplier_no, total_revenue) as
	select
		l_suppkey,
		sum(l_extendedprice * (1 - l_discount))
	from
		lineitem
	where
		l_shipdate >= 19930101
		and l_shipdate < 19930110
	group by
		l_suppkey;


explain analyze select
	s_suppkey,
	s_name,
	s_address,
	s_phone,
	total_revenue
from
	supplier,
	revenue0
where
	s_suppkey = supplier_no
	and total_revenue = (
		select
			max(total_revenue)
		from
			revenue0
	)
order by
	s_suppkey
LIMIT 1;

drop view revenue0;


-----------brin----------

DROP INDEX Test_IDX_LINEITEM_SHIPDATE;

DROP INDEX Test_IDX_ORDERS_ORDERDATE;

CREATE INDEX Test_IDX_LINEITEM_SHIPDATE ON LINEITEM using brin(L_SHIPDATE);-- with (max_pages_per_range=20);

CREATE INDEX Test_IDX_ORDERS_ORDERDATE ON ORDERS using brin(O_ORDERDATE);-- with (max_pages_per_range=20);

\di+

-------------query 10------------------
-- using 1448561682 as a seed to the RNG

explain select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	o_orderdate >= 19931201
	and o_orderdate < 19931210	
	and c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_returnflag = 'R'
--	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;

explain analyze select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	o_orderdate >= 19931201
	and o_orderdate < 19931210	
	and c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and l_returnflag = 'R'
--	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;-- using 1448561682 as a seed to the RNG

-------------query 14------------------
explain select
	100.00 * sum(case
		when p_type like 'PROMO%'
			then l_extendedprice * (1 - l_discount)
		else 0
	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
	lineitem,
	part
where
	l_shipdate >= 19971101
	and l_shipdate < 19971110	
	and l_partkey = p_partkey

LIMIT 1;-- using 1448561682 as a seed to the RNG

explain analyze select
	100.00 * sum(case
		when p_type like 'PROMO%'
			then l_extendedprice * (1 - l_discount)
		else 0
	end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue
from
	lineitem,
	part
where
	l_shipdate >= 19971101
	and l_shipdate < 19971110	
	and l_partkey = p_partkey

LIMIT 1;-- using 1448561682 as a seed to the RNG

-------------query 15------------------

create view revenue0 (supplier_no, total_revenue) as
	select
		l_suppkey,
		sum(l_extendedprice * (1 - l_discount))
	from
		lineitem
	where
		l_shipdate >= 19930101
		and l_shipdate < 19930110
	group by
		l_suppkey;


explain select
	s_suppkey,
	s_name,
	s_address,
	s_phone,
	total_revenue
from
	supplier,
	revenue0
where
	s_suppkey = supplier_no
	and total_revenue = (
		select
			max(total_revenue)
		from
			revenue0
	)
order by
	s_suppkey
LIMIT 1;

drop view revenue0;


create view revenue0 (supplier_no, total_revenue) as
	select
		l_suppkey,
		sum(l_extendedprice * (1 - l_discount))
	from
		lineitem
	where
		l_shipdate >= 19930101
		and l_shipdate < 19930110
	group by
		l_suppkey;


explain analyze select
	s_suppkey,
	s_name,
	s_address,
	s_phone,
	total_revenue
from
	supplier,
	revenue0
where
	s_suppkey = supplier_no
	and total_revenue = (
		select
			max(total_revenue)
		from
			revenue0
	)
order by
	s_suppkey
LIMIT 1;

drop view revenue0;


